# This is a basic workflow to helimport streamlit as st
from qiskit import QuantumCircuit, Aer, execute
from qiskit.visualization import plot_histogram
import matplotlib.pyplot as plt
import numpy as np

# T√≠tulo
title = "Simulador de Algoritmos Qu√¢nticos Verdes"
st.set_page_config(page_title=title)
st.title(title)

st.markdown("""
Este aplicativo permite simular algoritmos qu√¢nticos b√°sicos com foco em sustentabilidade computacional.
""")

# Se√ß√£o: Explica√ß√£o
with st.expander("üìò O que √© Computa√ß√£o Qu√¢ntica e Green IT?"):
    st.write("""
    **Computa√ß√£o Qu√¢ntica** √© um novo paradigma de computa√ß√£o que usa princ√≠pios da mec√¢nica qu√¢ntica.
    **Green IT** representa o uso sustent√°vel e eficiente de tecnologias da informa√ß√£o.
    Neste projeto, unimos os dois para pensar um futuro mais limpo e inteligente.
    """)

# Se√ß√£o: Sele√ß√£o do algoritmo
algoritmo = st.selectbox("Escolha o algoritmo para simular:", ["Grover (Busca)"], index=0)

# Se√ß√£o: Par√¢metros
target = st.text_input("Qual valor voc√™ quer buscar (em bin√°rio, ex: 11)?", value="11")

if st.button("Simular"):
    n_qubits = len(target)
    st.write(f"Simulando Grover para buscar `{target}` com {n_qubits} qubits...")

    # Cria√ß√£o do circuito (exemplo simples do Grover)
    qc = QuantumCircuit(n_qubits, n_qubits)
    qc.h(range(n_qubits))
    qc.barrier()
    qc.measure(range(n_qubits), range(n_qubits))

    backend = Aer.get_backend("qasm_simulator")
    job = execute(qc, backend=backend, shots=1024)
    result = job.result()
    counts = result.get_counts()

    # Exibir resultado
    st.subheader("Resultado da Simula√ß√£o:")
    st.bar_chart(counts)

    st.write("**Interpreta√ß√£o:** O valor mais frequente representa o estado final encontrado pelo algoritmo.")

# Rodap√©
st.markdown("---")
st.caption("Criado por Jadiel Cavalcanti da Silva | Projeto: Algoritmos Qu√¢nticos Verdes")
p you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
